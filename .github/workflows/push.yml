name: Push test pipeline

on: 
  push:
    branches:
      - "master"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    - name: Check licenses
      run: |
        make check_license_files
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Reuse check
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install reuse
        reuse --suppress-deprecation lint
    - name: Install dependencies
      run: |
        #python3 -m pip install --upgrade pip
        cd python
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: Build
      run: cd python && python3 setup.py build sdist
    - name: Lint
      run: |
        cd python
        flake8
    - name: Install
      run: cd python && python3 setup.py install
    - name: Test
      run: |
        JUNIT_REPORT=1 python3 -m pytest 
        make check_license_schema
    - name: CLI check
      run: |
        flame -h
        flame license BSD3
        flame compat BSD3
        flame licenses
        flame operators
        flame compats

  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push a commit
      pull-requests: write # Required to create a pull request
    steps:
      - uses: actions/checkout@v4

      # Something to generate files
      - run: |
         cd python
         pip install -r requirements.txt
         pip install -r requirements-dev.txt
         make status
         make clean && git diff && ls -al 

      # If the generated files are updated, this action pushes a commit.
      - uses: int128/update-generated-files-action@v2
 